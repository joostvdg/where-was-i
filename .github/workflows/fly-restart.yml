name: Manual Fly Restart

on:
  workflow_dispatch:

jobs:
  restart-database:
    name: Restart Database
    runs-on: ubuntu-latest
    environment:
      name: FLY
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl auth whoami
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - run: flyctl pg list
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - run: flyctl pg restart --app ${DB_APP_NAME} --force --verbose --debug
        env:
          DB_APP_NAME: ${{ secrets.DB_APP_NAME }}
          DB_ACCESS_TOKEN: ${{ secrets.DB_ACCESS_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  restart-application:
    name: Restart Application
    runs-on: ubuntu-latest
    needs: restart-database
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl auth whoami
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - run: flyctl apps restart ${APP_NAME} --force --verbose
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_ACCESS_TOKEN: ${{ secrets.APP_ACCESS_TOKEN }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
